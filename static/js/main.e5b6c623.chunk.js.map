{"version":3,"sources":["components/calc-button/CalculatorButton.js","components/calc-field/CalculatorField.js","components/calculator/Calculator.js","App.js","index.js"],"names":["CalculatorButton","props","className","onClick","number","console","log","onCalcButtonClicked","CalculatorField","smallerFont","style","numberToShow","length","fontSize","MATCH_LAST_NUMBER_REGEX","Calculator","useState","chainOfOperations","setChainOfOperations","setNumberToShow","lastAddedOp","setLastAddedOp","addOperationtoOpChain","num","isValidConcatenation","newChainOfOperations","addOperatorToOpChain","op","character","isSign","slice","val","numToConcatenate","parseInt","updatedChainOfOp","replace","onPosNegClicked","newPercentageNum","onPercentageClicked","resolvedChainOfOp","create","all","evaluate","evaluateOpChain","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5b6c623.chunk.js","sourcesContent":["import './CalculatorButton.css';\n\nfunction CalculatorButton(props) {\n\n  function onCalcButtonClick(number) {\n    console.log('You clicked ', number)\n    props.onCalcButtonClicked(number)\n  }\n\n  return (\n    <div className=\"CalculatorButton\">\n      <button className=\"calc-button\" onClick={() => onCalcButtonClick(props.number)}>\n        <p className=\"calc-button-text u-font-size-default\">{props.number}</p>\n        </button>\n    </div>\n  );\n}\n\nexport default CalculatorButton;\n","import './CalculatorField.css';\n\nconst MAX_FIELD_DIGITS = 20;  //Fits 20 numbers\n\nfunction CalculatorField(props) {\n\n  let smallerFont = { };\n\n  function shouldResizeField() {\n    if (props.numberToShow.length > MAX_FIELD_DIGITS) {\n      smallerFont = {\n        //backgroundColor: `#1DA6`, //test\n        fontSize: `calc(2.5rem - ${2+(props.numberToShow.length - MAX_FIELD_DIGITS)}px)`,\n      };\n      return true;\n    } else return false;\n  }\n\n  return (\n    <div className=\"CalculatorField\">\n      <p className=\"field-text u-font-size-default\" style={(shouldResizeField() ? smallerFont : {})}>{props.numberToShow}</p>\n    </div>\n  );\n}\n\nexport default CalculatorField;\n","import \"./Calculator.css\";\nimport CalculatorButton from \"../calc-button/CalculatorButton\";\nimport CalculatorField from \"../calc-field/CalculatorField\";\nimport { useState } from \"react\";\nimport { create, all } from \"mathjs\";\n\nconst MATCH_LAST_NUMBER_REGEX = /(\\/\\*\\+\\-\\.)?[0-9]+$/gm;\n\nfunction Calculator() {\n  const [chainOfOperations, setChainOfOperations] = useState(\"\");\n  const [numberToShow, setNumberToShow] = useState(\"\");\n  const [lastAddedOp, setLastAddedOp] = useState(false);\n\n  function addOperationtoOpChain(num) {\n    console.log(\"Calculator: you clicked \", num);\n    if (!isValidConcatenation(num)) {\n      return;\n    }\n\n    const newChainOfOperations = chainOfOperations + num;\n\n    if (lastAddedOp) {\n      setNumberToShow('' + num); //reset\n      setLastAddedOp(false);\n    } else {\n      setNumberToShow(numberToShow + num)\n    }\n\n    setChainOfOperations(newChainOfOperations);\n    console.log(\"newChainOfOperations \", newChainOfOperations);\n  }\n\n  function addOperatorToOpChain(op) {\n    console.log(\"Calculator: you clicked \", op);\n    if (!isValidConcatenation(op)) {\n      return;\n    }\n\n    const newChainOfOperations = chainOfOperations + op;\n    setLastAddedOp(true);\n    //keep displaying old num\n    setChainOfOperations(newChainOfOperations);\n  }\n\n  function isValidConcatenation(character) {\n    if (\n      typeof character != \"number\" &&\n      (isSign(chainOfOperations.slice(-1)) ||\n        isEmpty(chainOfOperations.slice(-1)))\n    ) {\n      console.log(\"Concatenation is not valid\");\n      return false;\n    }\n    console.log(\"Concatenation is valid\");\n    return true;\n  }\n\n  function isSign(val) {\n    return val === \"+\" || val === \"-\" || val === \"*\" || val === \"/\" || val === \".\";\n  }\n\n  function isEmpty(val) {\n    return val === \"\";\n  }\n\n  function resetChainOfOperations() {\n    setNumberToShow('');\n    setChainOfOperations(\"\");\n  }\n\n  function onPosNegClicked() {\n    let numToConcatenate = numberToShow;\n    if (parseInt(numToConcatenate) > 0) {\n      setNumberToShow('-' + numToConcatenate)\n    } else {\n      numToConcatenate = numToConcatenate.slice(1)\n      setNumberToShow(numToConcatenate)\n    }\n    let updatedChainOfOp = chainOfOperations;\n    updatedChainOfOp = updatedChainOfOp.replace(MATCH_LAST_NUMBER_REGEX, \"-\" + numToConcatenate);\n    setChainOfOperations(updatedChainOfOp);\n  }\n\n  // function removeLastItemFromOpChain() {\n  //   let updatedChainOfOp = chainOfOperations;\n  //   //setChainOfOperations(updatedChainOfOp.slice(0, -1));\n  //   updatedChainOfOp = updatedChainOfOp.replace(MATCH_LAST_NUMBER_REGEX, \"\");\n\n  //   console.log('updatedChainOfOp with regex ', updatedChainOfOp)\n  //   // if (isSign(updatedChainOfOp.slice(-1))) { //to remove also the sign left in the end\n  //   //   console.log('updatedChainOfOp has a sign at the end')\n  //   //   updatedChainOfOp = updatedChainOfOp.slice(0, -1)\n  //   // }\n  //   setChainOfOperations(updatedChainOfOp);\n  // }\n\n  function evaluateOpChain() {\n    if (chainOfOperations === \"\" || isSign(chainOfOperations.slice(-1))) {\n      return;\n    }\n    const math = create(all);\n    const resolvedChainOfOp = \"\" + math.evaluate(chainOfOperations);\n    setNumberToShow(resolvedChainOfOp);\n    setChainOfOperations(resolvedChainOfOp);\n  }\n\n  function onPercentageClicked() {\n      const newPercentageNum = numberToShow/100;\n      let updatedChainOfOp = chainOfOperations;\n      updatedChainOfOp = updatedChainOfOp.replace(MATCH_LAST_NUMBER_REGEX, newPercentageNum);\n      setChainOfOperations(updatedChainOfOp);\n      setNumberToShow(newPercentageNum);\n  }\n\n  return (\n    <div className=\"Calculator\">\n      <p className=\"calc-title u-font-size-default\"> Calculator </p>\n      <CalculatorField numberToShow={numberToShow} />\n      <div className=\"calc-row\">\n        <CalculatorButton\n          number={\"C\"}\n          onCalcButtonClicked={() => resetChainOfOperations()}\n        />\n        <CalculatorButton\n          onCalcButtonClicked={() => console.log(\"No action\")}\n        />\n        {/* <CalculatorButton\n          number={\"<\"}\n          onCalcButtonClicked={() => removeLastItemFromOpChain()}\n        /> */}\n        <CalculatorButton\n          number={\"+-\"}\n          onCalcButtonClicked={(num) => onPosNegClicked(num)}\n        />\n        <CalculatorButton\n          number={\"/\"}\n          onCalcButtonClicked={(num) => addOperatorToOpChain(num)}\n        />\n      </div>\n      <div className=\"calc-row\">\n        <CalculatorButton\n          number={7}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={8}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={9}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={\"*\"}\n          onCalcButtonClicked={(num) => addOperatorToOpChain(num)}\n        />\n      </div>\n      <div className=\"calc-row\">\n        <CalculatorButton\n          number={4}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={5}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={6}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={\"-\"}\n          onCalcButtonClicked={(num) => addOperatorToOpChain(num)}\n        />\n      </div>\n      <div className=\"calc-row\">\n        <CalculatorButton\n          number={1}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={2}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={3}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={\"+\"}\n          onCalcButtonClicked={(num) => addOperatorToOpChain(num)}\n        />\n      </div>\n      <div className=\"calc-row\">\n      <CalculatorButton\n          number={\"%\"}\n          onCalcButtonClicked={() => onPercentageClicked()}\n        />\n        <CalculatorButton\n          number={0}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={\".\"}\n          onCalcButtonClicked={(num) => addOperationtoOpChain(num)}\n        />\n        <CalculatorButton\n          number={\"=\"}\n          onCalcButtonClicked={() => evaluateOpChain()}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Calculator;\n","import './App.css';\nimport Calculator from './components/calculator/Calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"calculator-container\">\n        <Calculator />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}